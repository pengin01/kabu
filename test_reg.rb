require 'dbi'

class TestReg

  def regTest(conn)

    String sql_1 = "SELECT AM_POSSESSION_MONEY FROM NNK_MY_PROFILE WHERE ID_PROFILE = 'NNK001' AND ACTIVE_FLG = '1'"
    String sql_2 = "SELECT SPSD.CD_BRAND,  SPSD.CD_BRAND_SQE,  SPSD.AM_OPENING_PRICE,  SPSD.AM_HIGH_PRICE,  SPSD.AM_LOW_PRICE,  SPSD.AM_CLOSING_PRICE,  (SPSD.AM_LOW_PRICE / SPSD.AM_CLOSING_PRICE) AS NNK_THRESHOLD FROM NNK_STOCK_PRICES_SERIES_DAILY SPSD, (SELECT  CD_BRAND,  MAX(CD_BRAND_SQE) AS CD_BRAND_SQE FROM  NNK_STOCK_PRICES_SERIES_DAILY WHERE  AM_OPENING_PRICE <= AM_CLOSING_PRICE AND  CD_BRAND IN (SELECT  CD_BRAND  FROM  NNK_CORPORATE_INFO  WHERE  AM_STOCK_PRICE IS NOT NULL AND  AM_BPS_FIRST_TERM > (AM_STOCK_PRICE + ?) AND  AM_PROFIT_CURRENT_FIRST_TERM >= 0 AND  AM_STOCK_PRICE * NUM_NUNDER_STOCK < ? AND  ACTIVE_FLG = '1'   ) AND  ACTIVE_FLG = '1' GROUP BY CD_BRAND,CD_BRAND_SQE UNION  SELECT  CD_BRAND,  MAX(CD_BRAND_SQE) AS CD_BRAND_SQE FROM  NNK_STOCK_PRICES_SERIES_DAILY WHERE  AM_OPENING_PRICE > AM_CLOSING_PRICE AND  CD_BRAND IN (SELECT  CD_BRAND  FROM  NNK_CORPORATE_INFO  WHERE  AM_STOCK_PRICE IS NOT NULL AND  AM_BPS_FIRST_TERM > (AM_STOCK_PRICE + ?) AND  AM_PROFIT_CURRENT_FIRST_TERM >= 0 AND  AM_STOCK_PRICE * NUM_NUNDER_STOCK < ? AND  ACTIVE_FLG = '1'    ) AND  ACTIVE_FLG = '1' GROUP BY CD_BRAND,CD_BRAND_SQE ) SPSD_J WHERE   SPSD.CD_BRAND = SPSD_J.CD_BRAND AND  SPSD.CD_BRAND_SQE = SPSD_J.CD_BRAND_SQE AND  SPSD.AM_LOW_PRICE / SPSD.AM_CLOSING_PRICE <= ? ORDER BY SPSD.CD_BRAND,SPSD.CD_BRAND_SQE ASC";

   ## String sql_3 = "UPDATE NNK_CORPORATE_INFO SET LAST_UPDATE_DATE = NOW(), FL_DEALINGS_TARGET = '1' WHERE AM_STOCK_PRICE is not null AND AM_BPS_FIRST_TERM > (AM_STOCK_PRICE + 100) AND AM_PROFIT_CURRENT_FIRST_TERM >= 0 AND AM_STOCK_PRICE * NUM_NUNDER_STOCK < 50000 AND ACTIVE_FLG = '1'";

    am_possession_money = 0

    sth = conn.execute(sql_1)
    sth.fetch_hash do |row|

      am_possession_money = row["AM_POSSESSION_MONEY"].to_i

    end
    sth.finish



    para = 100, am_possession_money, 100, am_possession_money, 0.975

    sth = conn.execute(sql_2, para[0], para[1], para[2], para[3],para[4])
    sth.fetch_hash do |row|

      barandDTOs = row['CD_BRAND'] ,row["NNK_THRESHOLD"].to_f
      puts barandDTOs

    end
    sth.finish


  end
end